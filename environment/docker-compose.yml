# Command to start a fresh environment.
# docker-compose up -d --build

version: '2'

networks:
    default:
        external:
            name: dev

services:

    proxy:
        image: jwilder/nginx-proxy:alpine
        container_name: proxy
        privileged: true
        restart: always
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - /var/run/docker.sock:/tmp/docker.sock:cached
            - ./config/my_proxy.conf:/etc/nginx/conf.d/my_proxy.conf:cached
            # - ./certificates/:/etc/nginx/certs:cached

    portainer:
        image: portainer/portainer
        container_name: portainer
        restart: always
        ports:
            - "9900:9000"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:cached
            - ./data/portainer:/data:cached

    # blackfire:
    #     image: blackfire/blackfire
    #     container_name: blackfire
    #     restart: always
    #     ports:
    #         - "8707:8707"
    #     environment:
    #         BLACKFIRE_CLIENT_ID: "47aba20d-ba22-4160-b16a-e87f8bb55d38"
    #         BLACKFIRE_CLIENT_TOKEN: "c5b80eebaab1ad94c85368d0955a653ebb8d60469fa868db6aaafdc0b2e0493e"
    #         BLACKFIRE_SERVER_ID: "26ee3109-d139-4bc6-bccd-68276b85596e"
    #         BLACKFIRE_SERVER_TOKEN: "ed714c208eae8d61075e432b02f86bb29d518f5c7813c277f29e2d694ca4a0d3"

    # prometheus:
    #     image: prom/prometheus
    #     restart: always
    #     container_name: prometheus
    #     ports:
    #         - "9901:9090"
    #     volumes:
    #         - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:cached

    # mongo:
    #     image: mongo
    #     container_name: mongo
    #     # restart: always
    #     volumes:
    #         - ./data/mongo/:/data/:cached
    #         - ./data/mongoSeed/:/tmp/mongoSeed/:cached
    #     # environment:
    #     #    MONGO_INITDB_ROOT_USERNAME: root
    #     #    MONGO_INITDB_ROOT_PASSWORD: root

 #    mongo-express:
 #        image: mongo-express
 #        container_name: mongo-express
 #        restart: always
 #        ports:
 #            - 8081:8081
 #        volumes:
 #            - ./data/mongoExpress:/data/conf:cached
 # #       environment:
 # #            ME_CONFIG_MONGODB_ADMINUSERNAME: root
 # #            ME_CONFIG_MONGODB_ADMINPASSWORD: root

 #    mongoclient:
 #        image: mongoclient/mongoclient
 #        container_name: mongoclient
 #        restart: always
 #        ports:
 #            - 3000:3000
 #        volumes:
 #            - ./data/mongoClient:/data/db:cached
 # #       environment:
 # #            ME_CONFIG_MONGODB_ADMINUSERNAME: root
 # #            ME_CONFIG_MONGODB_ADMINPASSWORD: root

    redis:
        image: redis
        container_name: redis
        # restart: always
        ports:
            - "6379:6379"
        volumes:
            - ./data/redis:/data:cached

    mysql:
        image: mysql:5.7
        container_name: mysql
        restart: always            
        ports:
            - "3306:3306"
        volumes:
            - ./data/mysql:/var/lib/mysql:cached
            # Ensure MySql 5.7 is running in "disable strict SQL mod". [03/2018]
            - ./config/mysqlConfig/:/etc/mysql/conf.d/:cached
        environment:
            MYSQL_ROOT_PASSWORD: root

    # mariadb:
    #     image: mariadb
    #     container_name: mariadb
    #     restart: always
    #     ports:
    #         - "3307:3306"
    #     volumes:
    #         - ./.data/mariadb:/var/lib/mysql:cached #for Mac
    #         # Ensure MySql 5.7 is running in "disable strict SQL mod". [03/2018]
    #         # - ./config/mysqlConfig/:/etc/mysql/conf.d/:cached #for Mac
    #     environment:
    #         MYSQL_ROOT_PASSWORD: root